{
  "description": "Markdown syntax with support for [GitHub Markdown](https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown) extensions, like fenced code blocks, and ~strikethrough~.",
  "author": "FlohGro",
  "featureKeys": [
    {
      "id": "liveLinks",
      "name": "Live Links",
      "description": "Make URLs in the editor active even when link mode is not enabled. This allows tap/click of links, but makes it less convenient to place the cursor in a link for editing.",
      "defaultValue": false
    },
    {
      "id": "strikeCompletedTasks",
      "name": "Strikethrough Tasks",
      "description": "Display completed task lines as crossed out text.",
      "defaultValue": true
    },
    {
      "id": "dimCompletedTasks",
      "name": "Dim Tasks",
      "description": "Display completed task lines as dimmed text.",
      "defaultValue": true
    }
  ],
  "sampleText": "# GitHub Markdown Syntax\n\nBased on the Drafts original GitHub Markdown Syntax. The link definitions where extended / changed to the following definitions:\n\n### Drafts Internals\n\n- search for tag [[t:project::active]]\n- search in command palette [[cmd:post draft]]\n- search in action list [[a:process INBOX]]\n- run action by name [[r:process INBOX]]\n\n### External Searches\n\n- run shortcut by name [[!s:Good Morning Tim]]\n- search YouTube [[!yt:christopher lawley]]\n- search wikipedia [[!w:apple inc]]\n- search google [[!g:drafts app]]\n- search duckduckgo [[!ddg:drafts app]]\n",
  "fileExtensions": [
    "markdown",
    "mkdown",
    "md",
    "mdown"
  ],
  "indentationPatterns": [
    {
      "match": "(^\\h*\\* |^\\h*\\- |^\\h*\\+ |^\\h*\\d+\\. |^\\h*>[> ]+).*",
      "exclusive": true,
      "comment": "Indent Markdown lists and blockquotes",
      "indentCapture": "1",
      "indentScope": "text.normal"
    }
  ],
  "listCompletionDefinitions": [
    {
      "comment": "",
      "enabled": true,
      "match": "(^[ |\\t]*)((\\* \\[[ x]\\]|- \\[[ x]\\]|\\+ \\[[ x]\\]|\\*|-|\\+|>) )(.*)",
      "captures": {
        "indent": "1",
        "prefix": "2",
        "line": "4",
        "sequence": ""
      },
      "replacements": {
        "[x]": "[ ]",
        "{x}": "{ }",
        "{-}": "{ }"
      }
    },
    {
      "comment": "",
      "enabled": true,
      "match": "(^[ |\\t]*)((\\d+)\\. (\\[[ x]\\] )?)(.*)",
      "sequencePadding": "0",
      "captures": {
        "indent": "1",
        "prefix": "2",
        "line": "5",
        "sequence": "3"
      },
      "replacements": {
        "[x]": "[ ]",
        "{x}": "{ }",
        "{-}": "{ }"
      }
    }
  ],
  "rangeExtensionType": {
    "default": "lookAround2000",
    "macOS": "lookAround2000"
  },
  "patterns": [
    {
      "match": "(?s)(^```)(\\w*$\\n)(.*?)(?=^```)(^```)",
      "exclusive": true,
      "comment": "Fenced code blocks using ```",
      "captures": {
        "1": {
          "scope": "markup.code"
        },
        "2": {
          "scope": "markup.code"
        },
        "3": {
          "scope": "code.block"
        },
        "4": {
          "scope": "markup.code"
        }
      }
    },
    {
      "match": "^(#) ([^\\n]+?)(( \\1)?)$",
      "exclusive": true,
      "comment": "Markdown heading like #",
      "captures": {
        "1": {
          "scope": "markup.heading"
        },
        "2": {
          "scope": "text.heading01"
        },
        "3": {
          "scope": "markup.heading"
        }
      }
    },
    {
      "match": "^(##) ([^\\n]+?)(( \\1)?)$",
      "exclusive": true,
      "comment": "Markdown heading like ##",
      "captures": {
        "1": {
          "scope": "markup.heading"
        },
        "2": {
          "scope": "text.heading02"
        },
        "3": {
          "scope": "markup.heading"
        }
      }
    },
    {
      "match": "^(###) ([^\\n]+?)(( \\1)?)$",
      "exclusive": true,
      "comment": "Markdown heading like ###",
      "captures": {
        "1": {
          "scope": "markup.heading"
        },
        "2": {
          "scope": "text.heading03"
        },
        "3": {
          "scope": "markup.heading"
        }
      }
    },
    {
      "match": "^(####) ([^\\n]+?)(( \\1)?)$",
      "exclusive": true,
      "comment": "Markdown heading like ####",
      "captures": {
        "1": {
          "scope": "markup.heading"
        },
        "2": {
          "scope": "text.heading04"
        },
        "3": {
          "scope": "markup.heading"
        }
      }
    },
    {
      "match": "^(#####) ([^\\n]+?)(( \\1)?)$",
      "exclusive": true,
      "comment": "Markdown heading like #####",
      "captures": {
        "1": {
          "scope": "markup.heading"
        },
        "2": {
          "scope": "text.heading05"
        },
        "3": {
          "scope": "markup.heading"
        }
      }
    },
    {
      "match": "^(######) ([^\\n]+?)(( \\1)?)$",
      "exclusive": true,
      "comment": "Markdown heading like ######",
      "captures": {
        "1": {
          "scope": "markup.heading"
        },
        "2": {
          "scope": "text.heading06"
        },
        "3": {
          "scope": "markup.heading"
        }
      }
    },
    {
      "match": "^( {4,}(?![->\\*\\+] )(?!\\d+\\. )|\\t{1,}(?![->\\*\\+] )(?!\\d+\\. ))(\\S+.*)",
      "exclusive": true,
      "comment": "Markdown code blocks starting with 4 spaces or tab",
      "captures": {
        "1": {
          "scope": "code.block"
        },
        "2": {
          "scope": "code.block"
        }
      }
    },
    {
      "match": "^([*\\-]{3,})$",
      "exclusive": true,
      "comment": "Horizontal rule like *** or ---",
      "captures": {
        "1": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "^\\h*(\\*|\\-|\\+|\\d+\\.)? ?(\\[x\\]) (.*)",
      "exclusive": false,
      "featureKeys": "strikeCompletedTasks",
      "comment": "Markdown completed task list lines starting with whitespace and -,+,* and a [x]",
      "captures": {
        "3": {
          "scope": "text.strikethrough"
        }
      }
    },
    {
      "match": "^\\h*(\\*|\\-|\\+|\\d+\\.)? ?(\\[x\\]) (.*)",
      "exclusive": false,
      "featureKeys": "dimCompletedTasks",
      "comment": "Markdown completed task list lines starting with whitespace and -,+,* and a [x]",
      "captures": {
        "3": {
          "scope": "color.gray"
        }
      }
    },
    {
      "match": "^\\h*(\\*|\\-|\\+|\\d+\\.) ",
      "exclusive": false,
      "comment": "Markdown list lines starting with whitespace and -,+,*",
      "captures": {
        "1": {
          "scope": "markup.list"
        }
      }
    },
    {
      "match": "^(\\h*>[> ]+)(.*)",
      "exclusive": false,
      "comment": "Markdown quotes starting with > ",
      "captures": {
        "1": {
          "scope": "markup.quotation"
        },
        "2": {
          "scope": "text.quotation"
        }
      }
    },
    {
      "match": "((?<![\\\\`])(`)(?![`])([\\S?].*?)(?<![`])(`)(?![\\\\`]))",
      "exclusive": true,
      "comment": "Markdown inline code like `code`",
      "captures": {
        "2": {
          "scope": "markup.code"
        },
        "3": {
          "scope": "code.inline"
        },
        "4": {
          "scope": "markup.code"
        }
      }
    },
    {
      "match": "(!?\\[)([^\\[\\n]+)(\\])(\\()(\\S[^\\)]+)(\\))",
      "exclusive": true,
      "comment": "Markdown links like [text](link)",
      "captures": {
        "1": {
          "scope": "markup.link"
        },
        "2": {
          "scope": "text.link"
        },
        "3": {
          "scope": "markup.link"
        },
        "4": {
          "scope": "markup.link"
        },
        "5": {
          "scope": "text.url",
          "exclusive": true
        },
        "6": {
          "scope": "markup.link"
        }
      }
    },
    {
      "match": "((?<![\\\\_\\w])(_)(?![\\\\_])([\\S?].*?)(?<![\\\\_])(\\2)(?![\\\\_\\w]))",
      "exclusive": false,
      "comment": "Markdown emphasis like _italic_, require surrounding white space",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.italic"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "((?<![\\\\\\*])(\\*)(?![\\\\\\*])([\\S?].*?)(?<![\\\\\\*])(\\2)(?![\\\\\\*]))",
      "exclusive": false,
      "comment": "Markdown emphasis like *italic* in the middle of a word only",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.italic"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "(((?<![\\\\\\w])__)([\\S?].*?)(\\2)(?![\\\\\\*\\w]))",
      "exclusive": false,
      "comment": "Markdown bold like __bold__, require surrounding white space",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.bold"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "(((?<![\\\\])\\*\\*)([\\S?].*?)(\\2)(?![\\\\|\\*]))",
      "exclusive": false,
      "comment": "Markdown bold like **bold**, allow in middle of word",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.bold"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "(((?<!\\\\)~~)([\\S?].*?)(~~))",
      "exclusive": false,
      "comment": "Markdown strikethrough like ~text~",
      "captures": {
        "2": {
          "scope": "markup"
        },
        "3": {
          "scope": "text.strikethrough"
        },
        "4": {
          "scope": "markup"
        }
      }
    },
    {
      "match": "(\\[)([^\\[ |x].+?)(\\])( )?(\\[)([^\\]]*)(\\])(?:[^\\(])?",
      "exclusive": true,
      "comment": "Markdown reference links like [text][id]",
      "captures": {
        "1": {
          "scope": "markup"
        },
        "2": {
          "scope": "text.link"
        },
        "3": {
          "scope": "markup.link"
        },
        "4": {
          "scope": "markup.link"
        },
        "5": {
          "scope": "markup.link"
        },
        "6": {
          "scope": "markup.link"
        },
        "7": {
          "scope": "markup.link"
        }
      }
    },
    {
      "match": "^(\\[)([^\\[]+)(\\]:) (.*)",
      "exclusive": true,
      "comment": "Markdown reference like [id]: link",
      "captures": {
        "3": {
          "scope": "markup.link"
        },
        "1": {
          "scope": "markup.link"
        },
        "4": {
          "scope": "markup.link"
        },
        "2": {
          "scope": "text.link"
        }
      }
    },
    {
      "match": "(\\[)(\\^[^\\[]+)(\\])",
      "exclusive": true,
      "comment": "Markdown footnote reference like [^foot]",
      "captures": {
        "1": {
          "scope": "markup.link"
        },
        "2": {
          "scope": "text.link"
        },
        "3": {
          "scope": "markup.link"
        }
      }
    },
    {
      "match": "((?<![\\\\\\<])<[^>|<|\\n]{1,300}>)",
      "exclusive": false,
      "comment": "html tags",
      "captures": {
        "1": {
          "scope": "markup"
        }
      }
    }
  ],
  "linkDefinitions": [
    {
      "match": "(\\[\\[)(((d|u|s|w|!g|!w|url|t|!ddg|cmd|a|r|!yt|!s):)?([^\\[]+?))(\\]\\])",
      "templates": {
        "": "drafts://open?title=[[value]]&allowCreate=true",
        "u": "drafts://open?uuid=[[value]]",
        "d": "drafts://open?title=[[value]]&allowCreate=true",
        "w": "drafts://workspace?name=[[value]]",
        "s": "drafts://quickSearch?query=[[value]]",
        "url": "[[value_unencoded]]",
        "t": "drafts://search?tag=[[value]]",
        "cmd": "drafts://commandPalette?query=[[value]]",
        "a": "drafts://actionSearch?query=[[value]]",
        "r": "drafts://runAction?text=&action=[[value]]",
        "!ddg": "https://duckduckgo.com/?q=[[value]]",
        "!g": "https://www.google.com/search?q=[[value]]",
        "!w": "https://en.wikipedia.org/wiki/[[value]]",
        "!yt": "https://www.youtube.com/results?search_query=[[value]]",
        "!s": "shortcuts://run-shortcut?name=[[value]]"
      },
      "enabled": true,
      "comments": "Enables [[wiki-style]] internal links",
      "captures": {
        "value": "5",
        "key": "4",
        "prefix": "1",
        "suffix": "6",
        "link": "2"
      },
      "scopes": {
        "value": "text.italic",
        "key": "text.bold",
        "prefix": "markup",
        "suffix": "markup"
      }
    },
    {
      "match": "(()[A-Za-z0-9\\-\\+\\.]{2,128}:(?:(\\/\\/|%3|note\\/))(?:[^\\s|)|>]*)?)",
      "featureKeys": "liveLinks",
      "templates": {
        "": "[[value_unencoded]]"
      },
      "enabled": true,
      "comments": "Optional live links makes all URLs active",
      "captures": {
        "link": "1",
        "key": "2",
        "value": "1"
      },
      "scopes": {}
    }
  ],
  "taskMarkDefinitions": [
    {
      "enabled": true,
      "comment": "Finds task lines",
      "match": "^([ \\t]+)?([-\\*] )?(\\[[ x]\\]) (.+)",
      "rangeType": "line",
      "captures": {
        "interactive": "3",
        "state": "3",
        "label": "4"
      },
      "states": [
        "[ ]",
        "[x]"
      ],
      "completedStates": [
        "[x]"
      ],
      "initialState": "[ ]",
      "scopes": {
        "interactive": "text.monospace.bold.large"
      }
    },
    {
      "match": "(\\[[ x]\\])",
      "comment": "Finds only standalone task marks",
      "states": [
        "[ ]",
        "[x]"
      ],
      "enabled": true,
      "rangeType": "task",
      "captures": {
        "state": "1",
        "interactive": "1"
      },
      "scopes": {
        "interactive": "text.monospace.bold.large"
      },
      "completedStates": [
        "[x]"
      ],
      "initialState": "[ ]"
    }
  ],
  "navigationPatterns": [
    {
      "match": "^# (.*)$",
      "rangeCapture": "0",
      "comment": "H1 level markdown headers with #",
      "prefix": "H1",
      "labelCapture": "1",
      "identifierCapture": "1",
      "level": 0
    },
    {
      "match": "^## (.*)$",
      "comment": "H2 level markdown headers with ##",
      "prefix": "H2",
      "rangeCapture": "0",
      "labelCapture": "1",
      "identifierCapture": "1",
      "level": 1
    },
    {
      "match": "^### (.*)$",
      "comment": "H3 level markdown headers with ###",
      "prefix": "H3",
      "rangeCapture": "0",
      "labelCapture": "1",
      "identifierCapture": "1",
      "level": 2
    },
    {
      "match": "^#### (.*)$",
      "comment": "H4 level markdown headers with ####",
      "prefix": "H4",
      "rangeCapture": "0",
      "labelCapture": "1",
      "identifierCapture": "1",
      "level": 3
    },
    {
      "match": "^##### (.*)$",
      "comment": "H5 level markdown headers with #####",
      "prefix": "H5",
      "rangeCapture": "0",
      "labelCapture": "1",
      "identifierCapture": "1",
      "level": 4
    },
    {
      "match": "^###### (.*)$",
      "comment": "H6 level markdown headers with ######",
      "prefix": "H6",
      "rangeCapture": "0",
      "labelCapture": "1",
      "identifierCapture": "1",
      "level": 5
    }
  ],
  "scopeName": "text.markdown",
  "name": "GitHub Markdown - FlohGro",
  "autocompleteDefinitions": [
    {
      "trigger": "[[",
      "type": "draft",
      "label": "[[display_title]]",
      "value": "[[display_title]]",
      "queryType": "title",
      "queryTagFilter": "",
      "prefix": "[[",
      "suffix": "]]",
      "enabled": true
    },
    {
      "trigger": "<<",
      "type": "draft",
      "label": "[[display_title]]",
      "value": "[[draft]]",
      "queryType": "title",
      "queryTagFilter": "",
      "prefix": "",
      "suffix": "",
      "enabled": true
    }
  ]
}